name: Deploy Web App
on:
  push:
    branches: [master]
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin docker.io
      
      - name: Build Docker image
        run: docker build -t cygnetops/web-app-test -f Dockerfile.dev .
      
      - name: Run tests
        run: docker run -e CI=true cygnetops/web-app-test npm test
      
      - name: Generate deployment package (zip)
        run: zip -r deploy.zip . -x '*.git*'
    

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin docker.io
      
      # Add deploy steps here
      - name: Copy deployment package to Nginx server container
        run: docker cp deploy.zip nginx-container:/usr/share/nginx/html/deploy.zip
      # - name: Copy deployment package to Nginx server container
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.NGINX_HOST }}
      #     username: ${{ secrets.NGINX_USERNAME }}
      #     password: ${{ secrets.NGINX_PASSWORD }}
      #     source: deploy.zip
      #     target: /usr/share/nginx/html/deploy.zip

      # - name: Extract deployment package on Nginx server container
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.NGINX_HOST }}
      #     username: ${{ secrets.NGINX_USERNAME }}
      #     password: ${{ secrets.NGINX_PASSWORD }}
      #     script: cd /usr/share/nginx/html && unzip -o deploy.zip -d /usr/share/nginx/html
      
      # - name: Restart Nginx service
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.NGINX_HOST }}
      #     username: ${{ secrets.NGINX_USERNAME }}
      #     password: ${{ secrets.NGINX_PASSWORD }}
      #     script: sudo service nginx restart